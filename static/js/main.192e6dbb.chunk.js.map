{"version":3,"sources":["components/pokemon/PokemonCard.js","components/Search.js","components/pokemon/PokemonList.js","App.js","index.js"],"names":["PokemonCard","console","log","react_default","a","createElement","react_layout_grid_dist","columns","this","props","name","id","alt","src","sprite","types","map","t","key","type","Component","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_text_field_dist_default","trailingIcon","react_material_icon_dist_default","icon","react_text_field_dist","value","onChange","handleChange","PokemonList","_this","state","pokemon","searchText","bind","assertThisInitialized","_this2","axios","get","then","response","data","pokemon_entries","forEach","pokedex","concat","entry_number","pokemon_types","setState","prevState","types_deduped","toConsumableArray","Set","sort","catch","error","event","target","_this3","p","startsWith","pokemon_PokemonCard","sprites","front_default","components_Search","App","open","selectedIndex","className","react_drawer_dist_default","modal","onClose","react_drawer_dist","tag","react_list_dist_default","singleSelection","react_list_dist","graphic","primaryText","dist_default","navigationIcon","onClick","dist","pokemon_PokemonList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.192e6dbb.chunk.js","sourcesContent":["// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 12.01.19\r\n// Pokemon Card\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\n// Material Design Components\r\nimport { Cell } from '@material/react-layout-grid';\r\n\r\n// ------------------------------------------------- //\r\n\r\n/*\r\n  Passed is the name of the Pokemon as a key\r\n  Passed is the reference URL that we must request in order to view the Pokemon's profile\r\n\r\n  Seeing as though this is a list card we only want to use:\r\n  1. Name\r\n  2. Sprite (Icon)\r\n  3. Id\r\n  4. Type (e.g fire, ice, etc.)\r\n*/\r\n\r\n/*\r\n  Trouble I've come across:\r\n  1. img attribute src cannot be null (INCORRECT - See below)\r\n  2. Pokemon can be more than one type\r\n*/\r\n\r\n/*\r\n  I keep getting this error when trying to render the sprites\r\n  Can't see what's happening in code\r\n  What happens in memory is that I'm calling setState on a component that doesn't exist anymore..\r\n\r\n  Warning: Can't perform a React state update on an unmounted component.\r\n  This is a no-op, but it indicates a memory leak in your application.\r\n  To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n\r\n  Promises + Asynchronous\r\n  I'm doing asynchronous stuff with axios and a callback with setState\r\n  I need to figure out a way to stop calling when it no longer needs to be called\r\n  But I'm using promises w/ axios\r\n  I can't cancel promises\r\n\r\n  When PokemonCard gets unmounted, setState will continue to be called on something that doesn't exist.\r\n*/\r\n\r\nclass PokemonCard extends Component {\r\n  render() {\r\n    console.log();\r\n    return (\r\n      <Cell columns={1}>\r\n        <h3>{this.props.name}</h3>\r\n        <p>{this.props.id}</p>\r\n        <img\r\n          alt={this.props.name}\r\n          src={this.props.sprite}\r\n        />\r\n        {this.props.types.map(t => {\r\n          return(\r\n            <p key={t.type.name}>{t.type.name}</p>\r\n          )\r\n        })}\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n\r\nexport default PokemonCard;\r\n\r\n// ------------------------------------------------- //\r\n","// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 24.01.19\r\n// Search Component\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\n// Material Design Components\r\nimport TextField, {HelperText, Input} from '@material/react-text-field';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport { Cell } from '@material/react-layout-grid';\r\n\r\n// ------------------------------------------------- //\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Cell>\r\n        <TextField\r\n          trailingIcon={<MaterialIcon icon=\"search\"/>}\r\n        ><Input\r\n           value={this.props.value}\r\n           onChange={this.props.handleChange} />\r\n        </TextField>\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n\r\nexport default Search;\r\n\r\n// ------------------------------------------------- //\r\n","// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 12.01.19\r\n// List of Pokemon\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Material Design Components\r\nimport { Grid, Row } from '@material/react-layout-grid';\r\n\r\n// ------------------------------------------------- //\r\n\r\n// My components\r\nimport PokemonCard from './PokemonCard';\r\nimport Search from './../Search'\r\n\r\n// ------------------------------------------------- //\r\n\r\nclass PokemonList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemon: [],\r\n      types: [],\r\n      searchText: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  /*\r\n    https://pokeapi.co/api/v2/pokedex/1/ holds a specific list of pokemon\r\n    Each pokemon we want to use is stored at a seperate address\r\n    So we pass response 'entry_number' to the pokemon URL\r\n    `https://pokeapi.co/api/v2/pokemon/${pokedex.entry_number}/`\r\n\r\n    Why not just use `https://pokeapi.co/api/v2/pokemon/` to get all ???\r\n    That URL is the same as https://pokeapi.co/api/v2/pokedex/1/\r\n    It only holds Id's and not the pokemon details we want to List\r\n\r\n    The difference is that 'pokedex' holds a specific number (no duplicates)\r\n    but 'pokemon' holds every single version and alternative appearences of all pokemon\r\n  */\r\n\r\n  componentDidMount() {\r\n    axios.get('https://pokeapi.co/api/v2/pokedex/2/')\r\n    .then(response => {\r\n\r\n      // Loop through each entry and request each pokemon by entry\r\n      response.data.pokemon_entries.forEach(pokedex => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${pokedex.entry_number}/`)\r\n        .then(response => {\r\n          /*\r\n            I was mutating data -> use .concat instead of .push\r\n            https://reactjs.org/docs/optimizing-performance.html#the-power-of-not-mutating-data\r\n            https://stackoverflow.com/questions/41052598/reactjs-array-push-function-not-working-in-setstate/41052635\r\n          */\r\n          const pokemon_types = response.data.types.map(t => {return t.type.name}); // Can be more than one\r\n          this.setState(prevState => {\r\n            /*\r\n              Is this messy? -> should I have logic in setState?\r\n              Take previous list + add new types, then sort\r\n              Replace old list with new sorted list for dropdown menu\r\n            */\r\n            const types_deduped = [...new Set(prevState.types.concat(pokemon_types))];\r\n            types_deduped.sort();\r\n            return {\r\n              pokemon: prevState.pokemon.concat(response.data),\r\n              types: types_deduped\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n    })\r\n    .catch(error => console.log(error));\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      searchText: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let pokemon = this.state.pokemon.map(p => {\r\n      const nameMatch = p.name.startsWith(this.state.searchText);\r\n      return (nameMatch) ? (\r\n        <PokemonCard\r\n          key={p.id}\r\n          name={p.name}\r\n          sprite={p.sprites.front_default}\r\n          types={p.types}\r\n        />\r\n      ) : null;\r\n    });\r\n\r\n    return (\r\n      <Grid>\r\n        <Row>\r\n          <Search value={this.state.searchText} handleChange={this.handleChange}/>\r\n        </Row>\r\n        <Row>{pokemon}</Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n\r\nexport default PokemonList;\r\n\r\n// ------------------------------------------------- //\r\n","// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 12.01.19\r\n// React + Material\r\n// ------------------------------------------------- //\r\n// https://github.com/material-components/material-components-web-react#step-3a-use-compiled-css\r\n// https://sass-lang.com/guide\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\n// Material Design Components\r\nimport TopAppBar, { TopAppBarFixedAdjust } from '@material/react-top-app-bar';\r\nimport Drawer, {\r\n  DrawerAppContent,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerTitle\r\n} from '@material/react-drawer';\r\nimport MaterialIcon from '@material/react-material-icon';\r\nimport List, {\r\n  ListItem,\r\n  ListItemGraphic,\r\n  ListItemText\r\n} from '@material/react-list';\r\n\r\n// ------------------------------------------------- //\r\n\r\n// My Components\r\nimport PokemonList from './components/pokemon/PokemonList'\r\n\r\n// ------------------------------------------------- //\r\n\r\nimport './App.scss';\r\n\r\n// ------------------------------------------------- //\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      selectedIndex: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    /*\r\n      We only really want to work with:\r\n      1. List of Pokemon\r\n      2. Pokemon moves\r\n      3. Pokemon abilities\r\n\r\n      At the following API addresses:\r\n      1. https://pokeapi.co/api/v2/pokemon/\r\n      2. https://pokeapi.co/api/v2/move/\r\n      3. https://pokeapi.co/api/v2/ability/\r\n    */\r\n    // axios.get('https://pokeapi.co/api/v2/')\r\n    // .then(response => {\r\n    //   this.setState({\r\n    //     pokemon: response.data.pokedex,\r\n    //     moves: response.data.move,\r\n    //     abilities: response.data.ability\r\n    //   });\r\n    //   // console.log(this.state);\r\n    // })\r\n    // .catch(error => {\r\n    //   console.log(error);\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='drawer-container'>\r\n        <Drawer\r\n          modal\r\n          open={this.state.open}\r\n          onClose={() => this.setState({open: false})}\r\n        >\r\n          <DrawerHeader>\r\n            <DrawerTitle tag='h2'>Menu</DrawerTitle>\r\n          </DrawerHeader>\r\n\r\n          <DrawerContent>\r\n            <List singleSelection selectedIndex={this.state.selectedIndex}>\r\n              <ListItem>\r\n                <ListItemGraphic graphic={<MaterialIcon icon='folder'/>} />\r\n                <ListItemText primaryText='Pokédex' />\r\n              </ListItem>\r\n            </List>\r\n          </DrawerContent>\r\n        </Drawer>\r\n\r\n        <DrawerAppContent tag='main' className='drawer-app-content '>\r\n          <TopAppBar\r\n            className='top-app-bar-alternate'\r\n            navigationIcon={<MaterialIcon\r\n                icon='menu'\r\n                onClick={() => this.setState({open: !this.state.open})}\r\n            />}\r\n          />\r\n\r\n          <TopAppBarFixedAdjust>\r\n              <PokemonList />\r\n          </TopAppBarFixedAdjust>\r\n        </DrawerAppContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n\r\nexport default App;\r\n\r\n// ------------------------------------------------- //\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}