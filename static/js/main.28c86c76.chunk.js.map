{"version":3,"sources":["components/pokemon/PokemonCard.js","components/pokemon/PokemonList.js","App.js","index.js"],"names":["PokemonCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","sprite","id","types","_this2","axios","get","url","then","response","setState","data","sprites","front_default","catch","error","console","log","react_default","a","createElement","alt","src","map","t","type","Component","PokemonList","pokemonReference","pokemon_entries","pokemon_list","p","pokemon_PokemonCard","key","entry_number","pokemon_species","App","pokemon","moves","abilities","pokedex","move","ability","className","dist","pokemon_PokemonList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qRAuGeA,qBArDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAK,KACLC,OAAO,KACPC,GAAG,KACHC,MAAM,IANSX,mFAUC,IAAAY,EAAAT,KAClBU,IAAMC,IAAIX,KAAKJ,MAAMgB,KACpBC,KAAK,SAAAC,GACJL,EAAKM,SAAS,CACZV,KAAMS,EAASE,KAAKX,KACpBC,OAAQQ,EAASE,KAAKC,QAAQC,cAC9BX,GAAIO,EAASE,KAAKT,GAElBC,MAAOM,EAASE,KAAKR,UAKxBW,MAAM,SAAAC,GACLC,QAAQC,IAAIF,sCAKd,OACEG,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAKzB,KAAKI,MAAMC,MAChBkB,EAAAC,EAAAC,cAAA,SAAIzB,KAAKI,MAAMG,IACfgB,EAAAC,EAAAC,cAAA,OACEC,IAAK1B,KAAKI,MAAMC,KAChBsB,IAAK3B,KAAKI,MAAME,SAEjBN,KAAKI,MAAMI,MAAMoB,IAAI,SAAAC,GACpB,OACEN,EAAAC,EAAAC,cAAA,SAAII,EAAEC,KAAKzB,gBAzCG0B,cCWXC,cAxCb,SAAAA,EAAYpC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACjBnC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KAAMJ,KACDQ,MAAQ,CACX6B,iBAAiB,IAHFpC,mFAOC,IAAAY,EAAAT,KAQlBU,IAAMC,IAAI,wCACTE,KAAK,SAAAC,GACJL,EAAKM,SAAS,CAACkB,iBAAiBnB,EAASE,KAAKkB,oBAE/Cf,MAAM,SAAAC,GACLC,QAAQC,IAAIF,sCAKd,IAAMe,EAAenC,KAAKI,MAAM6B,iBAAiBL,IAAI,SAAAQ,GAAC,OACpDb,EAAAC,EAAAC,cAACY,EAAD,CACEC,IAAKF,EAAEG,aACPlC,KAAM+B,EAAEI,gBAAgBnC,KACxBO,IAAK,qCAAuCwB,EAAEG,aAAe,QAGjE,OACEhB,EAAAC,EAAAC,cAAA,eAAUU,UAlCUJ,aCyDXU,qBAlDb,SAAAA,EAAY7C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjB5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsC,QAAQ,GACRC,MAAM,GACNC,UAAU,IALK/C,mFASC,IAAAY,EAAAT,KAclBU,IAAMC,IAAI,8BACTE,KAAK,SAAAC,GACJL,EAAKM,SAAS,CACZ2B,QAAS5B,EAASE,KAAK6B,QACvBF,MAAO7B,EAASE,KAAK8B,KACrBF,UAAW9B,EAASE,KAAK+B,YAI5B5B,MAAM,SAAAC,GACLC,QAAQC,IAAIF,sCAKd,OACEG,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,OACdzB,EAAAC,EAAAC,cAACwB,EAAA,KAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,eA1CQnB,cCnBlBoB,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.28c86c76.chunk.js","sourcesContent":["// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 12.01.19\r\n// Pokemon Card\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Material Design Components\r\nimport {Cell, Grid, Row} from '@material/react-layout-grid';\r\n\r\n// ------------------------------------------------- //\r\n\r\n/*\r\n  Passed is the name of the Pokemon as a key\r\n  Passed is the reference URL that we must request in order to view the Pokemon's profile\r\n\r\n  Seeing as though this is a list card we only want to use:\r\n  1. Name\r\n  2. Sprite (Icon)\r\n  3. Id\r\n  4. Type (e.g fire, ice, etc.)\r\n*/\r\n\r\n/*\r\n  Trouble I've come across:\r\n  1. img attribute src cannot be null (INCORRECT - See below)\r\n  2. Pokemon can be more than one type\r\n*/\r\n\r\n/*\r\n  I keep getting this error when trying to render the sprites\r\n  Can't see what's happening in code\r\n  What happens in memory is that I'm calling setState on a component that doesn't exist anymore..\r\n\r\n  Warning: Can't perform a React state update on an unmounted component.\r\n  This is a no-op, but it indicates a memory leak in your application.\r\n  To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n\r\n  Promises + Asynchronous\r\n  I'm doing asynchronous stuff with axios and a callback with setState\r\n  I need to figure out a way to stop calling when it no longer needs to be called\r\n  But I'm using promises w/ axios\r\n  I can't cancel promises\r\n\r\n  When PokemonCard gets unmounted, setState will continue to be called on something that doesn't exist.\r\n*/\r\n\r\nclass PokemonCard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name:null,\r\n      sprite:null,\r\n      id:null,\r\n      types:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(this.props.url)\r\n    .then(response => {\r\n      this.setState({\r\n        name: response.data.name,\r\n        sprite: response.data.sprites.front_default,\r\n        id: response.data.id,\r\n        // types: response.data.types.map(t => this.types.push(t.type.name))\r\n        types: response.data.types\r\n      });\r\n      // console.log(this.types);\r\n      // console.log(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h1>{this.state.name}</h1>\r\n        <p>{this.state.id}</p>\r\n        <img\r\n          alt={this.state.name}\r\n          src={this.state.sprite}\r\n        />\r\n        {this.state.types.map(t => {\r\n          return(\r\n            <p>{t.type.name}</p>\r\n          )\r\n        })}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n// <img\r\n//   alt={this.state.pokemon.name}\r\n//   src={this.state.pokemon.sprites.front_default}\r\n// />\r\n\r\nexport default PokemonCard;\r\n","// ------------------------------------------------- //\r\n// Evan MacHale - N00150552\r\n// 12.01.19\r\n// List of Pokemon\r\n// ------------------------------------------------- //\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Material Design Components\r\nimport {Cell, Grid, Row} from '@material/react-layout-grid';\r\n\r\n// ------------------------------------------------- //\r\n\r\n// My components\r\nimport PokemonCard from './PokemonCard';\r\n\r\n// ------------------------------------------------- //\r\n\r\nclass PokemonList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemonReference:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    {/*\r\n      This URL gets a list of Pokemon references\r\n      1. Name\r\n      2. URL\r\n      The URL points to the Pokemon's profile\r\n      We will pass this URL as a prop to each Pokemon Card\r\n    */}\r\n    axios.get('https://pokeapi.co/api/v2/pokedex/1/')\r\n    .then(response => {\r\n      this.setState({pokemonReference:response.data.pokemon_entries});\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pokemon_list = this.state.pokemonReference.map(p =>\r\n      <PokemonCard\r\n        key={p.entry_number}\r\n        name={p.pokemon_species.name}\r\n        url={'https://pokeapi.co/api/v2/pokemon/' + p.entry_number + '/'}\r\n      />\r\n    );\r\n    return (\r\n      <section>{pokemon_list}</section>\r\n    );\r\n  }\r\n}\r\n\r\n// ------------------------------------------------- //\r\n\r\nexport default PokemonList;\r\n\r\n// ------------------------------------------------- //\r\n","// ------------------------------------------------- //\n// Evan MacHale - N00150552\n// 12.01.19\n// React + Material\n// ------------------------------------------------- //\n// https://github.com/material-components/material-components-web-react#step-3a-use-compiled-css\n// https://sass-lang.com/guide\n// ------------------------------------------------- //\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n// Material Design Components\nimport {Cell, Grid, Row} from '@material/react-layout-grid';\nimport {Headline1} from '@material/react-typography';\n\n// ------------------------------------------------- //\n\n// My Components\nimport PokemonList from './components/pokemon/PokemonList'\n\nimport './App.scss';\n\n// ------------------------------------------------- //\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon:{},\n      moves:{},\n      abilities:{}\n    }\n  }\n\n  componentDidMount() {\n    {/*\n\n      We only really want to work with:\n      1. List of Pokemon\n      2. Pokemon moves\n      3. Pokemon abilities\n\n      At the following API addresses:\n      1. https://pokeapi.co/api/v2/pokemon/\n      2. https://pokeapi.co/api/v2/move/\n      3. https://pokeapi.co/api/v2/ability/\n\n    */}\n    axios.get('https://pokeapi.co/api/v2/')\n    .then(response => {\n      this.setState({\n        pokemon: response.data.pokedex,\n        moves: response.data.move,\n        abilities: response.data.ability\n      });\n      // console.log(this.state);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  render() {\n    return (\n      <main className=\"app\">\n        <Grid>\n          <PokemonList />\n        </Grid>\n      </main>\n    );\n  }\n}\n\n// ------------------------------------------------- //\n\nexport default App;\n\n// ------------------------------------------------- //\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}